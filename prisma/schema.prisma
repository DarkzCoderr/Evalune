generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  clerkUserId String      @unique
  email       String      @unique
  name        String?
  imageUrl    String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  interviews  Interview[]
  resumes     Resume[]
}

model Resume {
  id         String      @id @default(uuid())
  fileName   String
  parsedJson Json
  userId     String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  interviews Interview[]
  user       User        @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)
}

model Interview {
  id          String    @id @default(uuid())
  resumeId    String
  userId      String
  startedAt   DateTime  @default(now())
  completedAt DateTime?
  feedback    Json?
  questions   Json
  score       Float?
  answers     Answer[]
  resume      Resume    @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  user        User      @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)

  @@index([userId])
  @@index([resumeId])
}

model Answer {
  id            String    @id @default(uuid())
  question      String
  transcript    String
  aiFeedback    Json?
  questionIndex Int
  createdAt     DateTime  @default(now())
  interviewId   String
  interview     Interview @relation(fields: [interviewId], references: [id], onDelete: Cascade)

  @@index([interviewId])
}
